apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  labels:
    app: django
spec:
  replicas: 3
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      initContainers:
        - name: django-migrate
          image: django_k8s:latest
          command:
            [
              "sh",
              "-c",
              "uv run python manage.py migrate && python manage.py collectstatic --noinput",
            ]
          env:
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: DEBUG
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: ALLOWED_HOSTS
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
      containers:
        - name: django
          image: django_k8s:latest
          ports:
            - containerPort: 8000
          env:
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: DEBUG
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: ALLOWED_HOSTS
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: django-config
                  key: POSTGRES_PORT
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
          # Comando para produção com Gunicorn
          command: ["uv", "run", "gunicorn"]
          args:
            [
              "--bind",
              "0.0.0.0:8000",
              "--workers",
              "3",
              "django_k8s.wsgi:application",
            ]
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 30
          volumeMounts:
            - name: static-files
              mountPath: /app/staticfiles
            - name: media-files
              mountPath: /app/media
      volumes:
        - name: static-files
          emptyDir: {}
        - name: media-files
          persistentVolumeClaim:
            claimName: media-pvc
